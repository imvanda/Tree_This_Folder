// qutimimeconverter.sip generated by MetaSIP
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2023 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_6_5_0 -)
%If (macOS)

class QUtiMimeConverter
{
%TypeHeaderCode
#include <qutimimeconverter.h>
%End

public:
    QUtiMimeConverter();
    virtual ~QUtiMimeConverter();
    bool canConvert(const QString &mime, const QString &uti) const;
    virtual QList<QByteArray> convertFromMime(const QString &mime, const QVariant &data, const QString &uti) const = 0;
    virtual QString utiForMime(const QString &mime) const = 0;
    virtual QString mimeForUti(const QString &uti) const = 0;
    virtual QVariant convertToMime(const QString &mime, const QList<QByteArray> &data, const QString &uti) const = 0;
    virtual int count(const QMimeData *mimeData) const;

private:
    QUtiMimeConverter(const QUtiMimeConverter &);
};

%End
%End
